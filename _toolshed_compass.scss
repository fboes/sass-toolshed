// Downscale images, i.e. for retina images
@mixin toolshed-background-scaled-compass ($retinaImageUrl, $factor: 2) {
	background-image: url($retinaImageUrl);
	background-size: (image-width($retinaImageUrl)/$factor) (image-height($retinaImageUrl)/$factor);
}

// on retina, use image that's scaled by 2
@mixin toolshed-background-retina-compass ($imageUrl, $retinaImageUrl2, $retinaImageUrl3 : '') {
	@if ($imageUrl != '') {
		background-image: url($imageUrl);
		background-size: image-width($imageUrl) image-height($imageUrl);
	} @elseif ($retinaImageUrl2 != '') {
		@include background-scaled-compass ($retinaImageUrl2, 2);
	} @else {
		@include background-scaled-compass ($retinaImageUrl3, 3);
	}
	@if ($retinaImageUrl2 != '' and $imageUrl != '') {
		@media (min--moz-device-pixel-ratio: 1.3),
			(-o-min-device-pixel-ratio: 2.6/2),
			(-webkit-min-device-pixel-ratio: 1.3),
			(min-device-pixel-ratio: 1.3),
			(min-resolution: 1.3dppx)
		{
			background-image: url($retinaImageUrl2);
		}
	}
	@if ($retinaImageUrl3 != '') {
		@media (min--moz-device-pixel-ratio: 2.6),
			(-o-min-device-pixel-ratio: 5,2/2),
			(-webkit-min-device-pixel-ratio: 2.6),
			(min-device-pixel-ratio: 2.6),
			(min-resolution: 2.6dppx)
		{
			background-image: url($retinaImageUrl3);
		}
	}
}

// Build a nice circular element
@mixin toolshed-circle-compass ($diameter, $paddingTop : 0px, $paddingSide : 0px, $paddingBottom : 0px, $enforceSize : false) {
	padding: $paddingTop $paddingSide $paddingBottom;
	@include border-radius($diameter);
	@include box-sizing(border-box);
	@if $enforceSize {
		height: $diameter;
		width: $diameter;
	} @else {
		min-height: $diameter;
		min-width: $diameter;
	}
	text-align:center;
}

